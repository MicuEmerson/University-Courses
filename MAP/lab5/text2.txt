ExeStack:
[[v=6;  , While(v-4){[print(v); , v=v-1; ]}] , print(v);]

SymTable:


Out:


FileTable:


Heap:



ExeStack:
[v=6;  , While(v-4){[print(v); , v=v-1; ]}]
print(v);

SymTable:


Out:


FileTable:


Heap:



ExeStack:
v=6; 
While(v-4){[print(v); , v=v-1; ]}
print(v);

SymTable:


Out:


FileTable:


Heap:



ExeStack:
While(v-4){[print(v); , v=v-1; ]}
print(v);

SymTable:

v-->6


Out:


FileTable:


Heap:



ExeStack:
[print(v); , v=v-1; ]
While(v-4){[print(v); , v=v-1; ]}
print(v);

SymTable:

v-->6


Out:


FileTable:


Heap:



ExeStack:
print(v);
v=v-1; 
While(v-4){[print(v); , v=v-1; ]}
print(v);

SymTable:

v-->6


Out:


FileTable:


Heap:



ExeStack:
v=v-1; 
While(v-4){[print(v); , v=v-1; ]}
print(v);

SymTable:

v-->6


Out:

6


FileTable:


Heap:



ExeStack:
While(v-4){[print(v); , v=v-1; ]}
print(v);

SymTable:

v-->5


Out:

6


FileTable:


Heap:



ExeStack:
[print(v); , v=v-1; ]
While(v-4){[print(v); , v=v-1; ]}
print(v);

SymTable:

v-->5


Out:

6


FileTable:


Heap:



ExeStack:
print(v);
v=v-1; 
While(v-4){[print(v); , v=v-1; ]}
print(v);

SymTable:

v-->5


Out:

6


FileTable:


Heap:



ExeStack:
v=v-1; 
While(v-4){[print(v); , v=v-1; ]}
print(v);

SymTable:

v-->5


Out:

6

5


FileTable:


Heap:



ExeStack:
While(v-4){[print(v); , v=v-1; ]}
print(v);

SymTable:

v-->4


Out:

6

5


FileTable:


Heap:



ExeStack:
print(v);

SymTable:

v-->4


Out:

6

5


FileTable:


Heap:



ExeStack:

SymTable:

v-->4


Out:

6

5

4


FileTable:


Heap:




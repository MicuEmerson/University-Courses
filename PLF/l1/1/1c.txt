
(defun subListe(L)
	(removeNil (subL L))
)

(defun subL(N)
	(cond 
		((listp N) (append 	(list N) (mapcar #'subL N)) )
	)
)

(defun removeNil (L)
	(cond
		((and (= (car L) NIL) (atom (car L))) (removeNil (cdr L)))
		((atom (car L)) (cons (car L) (removeNil (cdr L))))
		(T (cons (removeNil (car L)) (removeNil (cdr L))))
	)
)
